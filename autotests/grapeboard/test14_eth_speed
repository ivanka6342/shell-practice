#!/bin/bash

LOG_FILE="./results.log"
PROMPT="root@trustbox:~#"
TEST_STR="///////////////////////////////"
TTY="/dev/ttyUSB0"

err() {
    echo -e "\t$1" | tee -a "$LOG_FILE"
    echo "----------------------------" | tee -a "$LOG_FILE"

    kill -9 `head -n 1 $tmp_f`
    rm $tmp_f
    exit 1
}

test_bootloader() {
    expect -i >> /dev/null <<EOF
        spawn cat "$TTY"
    
        # time to connect power cable
        set timeout 10
        expect {
            "U-Boot SPL" { puts "\n$TEST_STR DEVICE CONNECTED $TEST_STR\n" }
            timeout { puts "TIME OUT\n"; close; exit 3 }
        }
    
        # time to finish bootloader(u-boot) work
        set timeout 7
        expect {
            "Hit any key to stop autoboot:" { puts "\n$TEST_STR U-BOOT PROMPT $TEST_STR\n" }
            timeout { puts "TIME OUT\n"; close; exit 4 }
        }

        close
EOF

    res="$?"
    if [ "$res" -ne "0" ]; then
        if [ "$res" -eq "3" ]; then
            echo -e "\tpower was not supplied" | tee -a "$LOG_FILE"
        elif [ "$res" -eq "4" ]; then
            echo -e "\tU-boot not work" | tee -a "$LOG_FILE"
        fi
        err
    else
        echo > "$TTY"
        if [ "$1" == "-verbose" ]; then
            echo -e "\tpower supplied. U-boot prompt:" | tee -a "$LOG_FILE"  
        fi
    fi
}

start_server() {
    expect -i <<EOF
        log_file "$tmp_f"
        spawn iperf -s

        set timeout 2
        expect {
            "Server listening" { puts "\n$TEST_STR server : start - ok\n"; set timeout 4; exp_continue }
            "connected" { set timeout 15; puts "\n$TEST_STR server : client connected\n"; exp_continue }
            "sec" { puts "\nTEST_STR server : client speed test - ok" }
            timeout { puts "server : TIME OUT\n"; close; exit 3 }
        }

        close
EOF

    if [ "$?" -ne "0" ]; then
        err "iperf client connection failed"
    else
        echo -e "\tclient connected" | tee -a "$LOG_FILE"
        echo -e "\t`cat $tmp_f | grep 'sec' | tail -n 1 | cut -d'-' -f2`" | tee -a "$LOG_FILE"
    fi
}

start_client() {
    echo "dhclient -v" >> $TTY
    expect -i <<EOF
        spawn cat "$TTY"

        set timeout 5
        expect {
            "DHCPACK" { puts "DHCP-ACK"; exp_continue }
            "$PROMPT" { puts "DHCP OK" }
            timeout { puts "DHCP error\r"; exit 3 }
        }

        close
EOF
    if [ "$?" -ne "0" ]; then
        err "\tclient getting IP from DHCP-server failed"
    fi

    echo "iperf -c '$SERVER_IP'" > $TTY
    expect -i <<EOF
        spawn cat "$TTY"
    
        set timeout 3
        expect {
            "Client connecting" { puts "\nclient start - ok\n"; exp_continue }
            "connected" { set timeout 15; exp_continue }
            "$PROMPT" { puts "client work done" }
            "connect failed" { puts "client connection failed\n"; close; exit 3 }
            timeout { puts "TIME OUT\n"; close; exit 3 }
        }

        close
EOF
}


####################
# start of execution
####################
clear
stty min 1 time 0 line 0 -brkint -icrnl -imaxbel -opost -isig -icanon -iexten -echo clocal cread cs8 -cstopb -parenb -F $TTY speed 115200
echo "----------------------------" | tee -a "$LOG_FILE"
echo "start real eth speed test" | tee -a "$LOG_FILE"
echo "pls insert the power and ETH cable into trustboard(10s)" 

SERVER_INTERFACE=`ip addr | awk '/state UP/ {print $2}' | sed 's/.$//'`
SERVER_IP=`ifconfig $SERVER_INTERFACE | grep 'inet.*netmask' | cut -d' ' -f10`

tmp_f=`mktemp /tmp/data.XXXXX`
#test_bootloader -verbose

start_client &
start_server

rm $tmp_f
echo -e "test done" | tee -a "$LOG_FILE"
echo "----------------------------" | tee -a "$LOG_FILE"
